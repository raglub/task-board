// vue-cal.d.ts
/** Declaration file generated by dts-gen */
declare module 'vue-cal' {
    export const components: {
      WeekdaysHeadings: {
        computed: {
          cellHeadingsClickable: any;
          headings: any;
          weekdayCellStyles: any;
        };
        methods: {
          selectCell: any;
        };
        props: {
          switchToNarrowerView: {
            default: any;
            type: any;
          };
          transitionDirection: {
            default: string;
            type: any;
          };
          view: {
            default: any;
            type: any;
          };
          vuecal: {
            default: any;
            type: any;
          };
          weekDays: {
            default: any;
            type: any;
          };
          weekDaysShort: {
            default: any;
            type: any[];
          };
        };
        render: any;
        staticRenderFns: any[];
      };
      'vuecal-cell': {
        components: {
          Event: {
            computed: {
              domEvents: {
                get: any;
                set: any;
              };
              resizable: any;
            };
            methods: {
              deleteEvent: any;
              eventClasses: any;
              eventStyles: any;
              focusEvent: any;
              onClick: any;
              onDblClick: any;
              onDragHandleMouseDown: any;
              onMouseDown: any;
              onMouseEnter: any;
              onMouseLeave: any;
              onTouchStart: any;
              touchDeleteEvent: any;
            };
            props: {
              allDay: {
                default: boolean;
                type: any;
              };
              cellEvents: {
                default: any;
                type: any;
              };
              event: {
                default: any;
                type: any;
              };
              formattedDate: {
                default: string;
                type: any;
              };
              split: {
                default: number;
                type: any;
              };
              vuecal: {
                default: any;
                type: any;
              };
            };
            render: any;
            staticRenderFns: any[];
            watch: {
              'event.background': any;
            };
          };
        };
        computed: {
          cellStyles: any;
          cssClasses: any;
          domEvents: {
            get: any;
            set: any;
          };
          events: {
            get: any;
            set: any;
          };
          isAfterMaxDate: any;
          isBeforeMinDate: any;
          isDisabled: any;
          splitEvents: any;
          texts: any;
          timelineVisible: any;
          todaysTimePosition: any;
          transitionDirection: any;
          view: any;
        };
        methods: {
          checkCellOverlappingEvents: any;
          isDOMElementAnEvent: any;
          onCellMouseDown: any;
          onCellTouchStart: any;
          selectCell: any;
        };
        props: {
          allDay: {
            default: boolean;
            type: any;
          };
          data: {
            required: boolean;
            type: any;
          };
          maxTimestamp: {
            default: number;
            type: any;
          };
          minTimestamp: {
            default: number;
            type: any;
          };
          options: {
            default: any;
            type: any;
          };
          splits: {
            default: any;
            type: any;
          };
        };
        render: any;
        staticRenderFns: any[];
      };
      'vuecal-header': {
        components: {
          WeekdaysHeadings: {
            computed: {
              cellHeadingsClickable: any;
              headings: any;
              weekdayCellStyles: any;
            };
            methods: {
              selectCell: any;
            };
            props: {
              switchToNarrowerView: {
                default: any;
                type: any;
              };
              transitionDirection: {
                default: string;
                type: any;
              };
              view: {
                default: any;
                type: any;
              };
              vuecal: {
                default: any;
                type: any;
              };
              weekDays: {
                default: any;
                type: any;
              };
              weekDaysShort: {
                default: any;
                type: any[];
              };
            };
            render: any;
            staticRenderFns: any[];
          };
        };
        computed: {
          broaderView: any;
          transitionDirection: {
            get: any;
            set: any;
          };
        };
        methods: {
          goToToday: any;
          next: any;
          onArrowClick: any;
          previous: any;
          switchToBroaderView: any;
        };
        props: {
          options: {
            default: any;
            type: any;
          };
          switchToNarrowerView: {
            default: any;
            type: any;
          };
          viewProps: {
            default: any;
            type: any;
          };
          weekDays: {
            default: any;
            type: any;
          };
          weekDaysShort: {
            default: any;
            type: any[];
          };
        };
        render: any;
        staticRenderFns: any[];
      };
    }

    export const name: string

    export const props: {
      '12Hour': {
        default: boolean;
        type: any;
      };
      clickToNavigate: {
        default: boolean;
        type: any;
      };
      dblClickToNavigate: {
        default: boolean;
        type: any;
      };
      defaultView: {
        default: string;
        type: any;
      };
      disableViews: {
        default: any;
        type: any;
      };
      editableEvents: {
        default: boolean;
        type: any;
      };
      events: {
        default: any;
        type: any;
      };
      eventsCountOnYearView: {
        default: boolean;
        type: any;
      };
      eventsOnMonthView: {
        default: boolean;
        type: any[];
      };
      hideBody: {
        default: boolean;
        type: any;
      };
      hideTitleBar: {
        default: boolean;
        type: any;
      };
      hideViewSelector: {
        default: boolean;
        type: any;
      };
      hideWeekends: {
        default: boolean;
        type: any;
      };
      locale: {
        default: string;
        type: any;
      };
      maxDate: {
        default: string;
        type: any[];
      };
      minCellWidth: {
        default: number;
        type: any;
      };
      minDate: {
        default: string;
        type: any[];
      };
      noEventOverlaps: {
        default: boolean;
        type: any;
      };
      onEventClick: {
        default: any;
        type: any;
      };
      onEventCreate: {
        default: any;
        type: any;
      };
      onEventDblclick: {
        default: any;
        type: any;
      };
      selectedDate: {
        default: string;
        type: any[];
      };
      showAllDayEvents: {
        default: boolean;
        type: any[];
      };
      small: {
        default: boolean;
        type: any;
      };
      splitDays: {
        default: any;
        type: any;
      };
      startWeekOnSunday: {
        default: boolean;
        type: any;
      };
      time: {
        default: boolean;
        type: any;
      };
      timeCellHeight: {
        default: number;
        type: any;
      };
      timeFormat: {
        default: string;
        type: any;
      };
      timeFrom: {
        default: number;
        type: any;
      };
      timeStep: {
        default: number;
        type: any;
      };
      timeTo: {
        default: number;
        type: any;
      };
      todayButton: {
        default: boolean;
        type: any;
      };
      transitions: {
        default: boolean;
        type: any;
      };
      xsmall: {
        default: boolean;
        type: any;
      };
    }

    export const staticRenderFns: any[]

    export function beforeDestroy(): void;

    export function created(): void;

    export function data(): any;

    export function mounted(): void;

    export function render(): any;

    export namespace computed {
      function cssClasses(): any;

      function hasSplits(): any;

      function hasTimeColumn(): any;

      function isShortMonthView(): any;

      function maxTimestamp(): any;

      function minTimestamp(): any;

      function months(): any;

      function selectedDateFormatted(): any;

      function timeCells(): any;

      function viewCells(): any;

      function viewTitle(): any;

      function views(): any;

      function weekDays(): any;

      function weekDaysInHeader(): any;

      function weekDaysShort(): any;
    }

    export namespace filters {
      function formatTime(value: any, format: any): any;
    }

    export namespace methods {
      function cleanupEvent(event: any): any;

      function createEvent(formattedDate: any, ...args: any[]): any;

      function emitWithEvent(eventName: any, event: any): void;

      function findAncestor(el: any, Class: any): any;

      function getPosition(e: any): any;

      function isDOMElementAnEvent(el: any): any;

      function loadLocale(locale: any): void;

      function onEventTitleBlur(e: any, event: any): any;

      function onMouseMove(e: any): any;

      function onMouseUp(e: any): any;

      function switchToNarrowerView(): any;

      function switchView(view: any, ...args: any[]): any;

      function updateMutableEvents(): any;

      function updateSelectedDate(date: any): void;
    }

    export namespace watch {
      function locale(_locale: any): void;

      function selectedDate(date: any): void;

      namespace events {
        const deep: boolean

        function handler(events: any, oldEvents: any): void;
      }
    }
  }
